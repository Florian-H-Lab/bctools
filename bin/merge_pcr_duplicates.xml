<tool id="merge_pcr_duplicates.py" name="Merge PCR duplicates" version="0.1.0">
  <description>according to random barcode library.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <expand macro="stdio" />
  <version_command>python merge_pcr_duplicates.py --version</version_command>
  <command interpreter="python"><![CDATA[merge_pcr_duplicates.py
#if $positional_1 and $positional_1 is not None:
$positional_1
#end if

#if $positional_2 and $positional_2 is not None:
$positional_2
#end if

> $default]]></command>
  <inputs>
    <param area="false" label="bed6 file containing alignments." name="positional_1" type="data" format="bed"/>
    <param area="false" label="fasta barcode library." name="positional_2" type="data" format="fasta"/>
  </inputs>
  <outputs>
    <data format="bed" hidden="false" name="default"/>
  </outputs>
  <tests>
    <test>
      <param name="positional_1" value="pcr_dupes_sorted_2.bed"/>
      <param name="positional_2" value="pcr_dupes_randomdict.fa"/>
      <output name="default" file="merged_pcr_dupes.bed"/>
    </test>
  </tests>
  <help><![CDATA[
Merge PCR duplicates according to random barcode library.

Barcodes containing uncalled base 'N' are removed.

Input::

* bed6 file containing alignments with fastq read-id in name field
* fastq library of random barcodes

Output::

* bed6 file with random barcode in name field and number of PCR duplicates as score, sorted by fields chrom, start, stop, strand, name

Author: Daniel Maticzka
Copyright: 2015
License: Apache
Email: maticzkd@informatik.uni-freiburg.de
Status: Testing
]]></help>
  <expand macro="citations" />
</tool>
